ls()
dir()
setwd("GitHub")
dir()
setwd("GenEdVis")
dir()
gened <- read.csv("data.csv")
typeof(gened)
typeof(gened$Learning.Goals[1])
typeof(gened$Title[1])
?read.csv
gened <- read.csv("data.csv", h = TRUE)
typeof(gened$Title[1])
typeof(gened$Learning.Goals[1])
swirl()
library("swirl")
swirl()
my_vector <- c(1:20)
my_vector <- c([1:20])
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nr = 4, nc =5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
ls()
class(gened)
gened[1:3,1:5]
ls()
my_data
my_data$age[1]
typeof(my_data$patient[1])
gened <- data.frame(lapply(gened,function(x){
gsub("LearningGoal(s): ","",x)
}))
gened[1:3,1:5]
gened <- data.frame(lapply(gened,function(x){
gsub("LearningGoal(s):\\s*","",x)
}))
gened[1:3,1:5]
class(gened)
my_tst <- data.frame(lapply(my_data,function(x){
gsub("Bill","",x)
}))
my_tst
class(my_tst)
my_tst <- data.frame(lapply(my_data,function(x){
gsub("Bil","",x)
}))
my_tst
gened <- read.csv("data.csv", h = TRUE)
gened[1:3,1:5]
typeof(my_tst$patient[1])
gened <- data.frame(lapply(gened,function(x){
gsub("LearningGoal","",x)
}))
gened[1:3,1:5]
gened <- data.frame(lapply(gened,function(x){
gsub("(s)\: ","",x)
}))
gened <- data.frame(lapply(gened,function(x){
gsub("(s): ","",x)
}))
gened[1:3,1:5]
gened <- data.frame(lapply(gened,function(x){
gsub("(","",x)
}))
gened <- data.frame(lapply(gened,function(x){
gsub("\(s\): ","",x)
}))
gened <- data.frame(lapply(gened,function(x){
gsub(is.character("(s): "),"",x)
}))
gened[1:3,1:5]
gened <- data.frame(lapply(gened,function(x){
gsub("\\(s\\): ","",x)
}))
gened[1:3,1:5]
gened <- read.csv("data.csv", h = TRUE)
gened[1:3,1:5]
gened <- data.frame(lapply(gened,function(x) gsub("LearningGoals\\(s\\): ","",x), stringsAsFactors=F))
gened <- data.frame(lapply(gened,function(x){
gsub("LearningGoal\\(s\\): ","",x)
}))
gened[1:3,1:5]
gened[1:3,1:6]
gened <- data.frame(lapply(gened,function(x){
gsub("Distribution Requirement\\(s\\): ","",x)
}))
gened[1:3,1:6]
getwd()
write.csv(gened, file="gened_data.csv", na="")
dir()
gened <- read.csv("gened_data.csv")
gened[1:3,1:6]
gened[1:3,1:7]
head(gened)
gened$X <- NULL
gened[1:3,1:7]
ls()
swirl()
TRUE == TRUE
play()
nxt()
exit()
q()
swirl()
swirl()
0
0
0
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
borng_function('My first function!')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, nu = 5)
remainder(4, di = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("hello", "Work")
submit()
submit()
submit()
submit()
mad_libs("Detroit", "hairy", "clock")
submit()
"I" %p% "love" %p% "R!"
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head()
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6, ))
unique(c(3, 4, 5, 5, 5, 6, 6 ))
uniqui_vals <- lapply(flags, uniquie)
uniqui_vals <- lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
ls()
gened[1:3,1:5]
gened[1:3,1:6]
cls_vect
gened$Learning.Goals
test <- sapply(gened$Learning.Goals, class)
test
head(test)
test <- uniquie(gened)
test <- unique(gened)
test
gened <- test
class(gened)
?ifelse
?contains
?grepl
grepl("CO",gened$Learning.Goals)
ifelse(grepl("CO",gened$Learning.Goals),1,0)
gened$CO <- ifelse(grepl("CO",gened$Learning.Goals),1,0)
gened[1:3,1:5]
gened[1:3,1:8]
gened[1:3,7:8]
gened[1:30,7:8]
gened[1:30,5:8]
gened[1:40,5:8]
gened[1:50,5:8]
gened[1:70,5:8]
gened[1:100,5:8]
gened$CW <- ifelse(grepl("CW",gened$Learning.Goals),1,0)
gened$L <- ifelse(grepl("L",gened$Learning.Goals),1,0)
gened$G <- ifelse(grepl("G",gened$Learning.Goals),1,0)
gened$Q <- ifelse(grepl("Q",gened$Learning.Goals),1,0)
gened[1:3,5:15]
gened[1:3,7:15]
gened[1:3,7:20]
gened[1:3,7:18]
gened[1:3,7:16]
gened[1:3,7:17]
gened[1:3,7:16]
gened$A <- ifelse(grepl("A",gened$Distribution.Requirements),1,0)
gened[1:3,7:16]
gened$FS <- ifelse(grepl("FS",gened$Distribution.Requirements),1,0)
gened$H <- ifelse(grepl("H",gened$Distribution.Requirements),1,0)
gened$NS <- ifelse(grepl("NS",gened$Distribution.Requirements),1,0)
gened$SS <- ifelse(grepl("SS",gened$Distribution.Requirements),1,0)
gened[1:3,7:16]
sapply(gened,class)
write.csv(gened, file="gened_data.csv", na="")
gened[1]
gened[17]
?na.random
install.packages("imputeTS")
?na.random
na.random(gened,l=1,u=5)
library("imputeTS")
na.random(gened,l=1,u=5)
head(gened)
new_gened <- read.csv("gened_data.csv")
head(new_gened)
new_gened$X <- NULL
na.random(new_gened,l=1,u=5)
warning()
na.random(new_gened,lowerBound = 1,upperBound = 5)
?replace
?random
?sample
?sample
new_gened[17]
new_gened[18]
new_gened[20]
ncol(new_gened)
new_gened[17]
new_gened[16]
new_gened[17]
sample(1:length(new_gened[17]),5,replace = TRUE)
length((new_gened[17]))
length(new_gened[17])
nrow(new_gened[17])
sample(1:5,nrow(new_gened[17]),replace = TRUE)
?for
g
sample(1:length(new_gened[17]),5,replace = TRUE)
sample(1:5,nrow(new_gened[17]),replace = TRUE)
sample(1:5,nrow(new_gened[17]),replace = TRUE)
for(index in 17:ncol(new_gened)){
}
for(index in 17:ncol(new_gened)){
new_gened[index] <- sample(1:5,nrow(new_gened[index]),replace = TRUE)
}
head(new_gened)
write.csv(new_gened, file="gened_data.csv", na="")
test_gened <- read.csv("data.csv", h = TRUE)
head(test_gened)
test_gened <- read.csv("gened_data.csv", h=T)
head(test_gened)
sapply(test_gened, class)
?read.csv
gened <- read.csv("gened_data.csv", header = T, stringsAsFactors = F)
sapply(gened, class)
gened[1:3,1:7]
savehistory("~/GitHub/GenEdVis/gened.Rhistory")
